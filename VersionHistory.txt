V0.1 - First alfalfa
--------------------
UPDATE: 12/03/2012
-> changed SMAM calculation behavior: maximal matches whitch are not unique are now also calculated and returned, this because exact matches to several positions were not reported. This increases SMAM time and output, but a good choice of the minLength of SMAMs should alleviate this problem.
UPDATE: 13/03/2012
-> changed SMAM calculation behavior again: number of matches can be very high, limited to a certain parameter, adjustable by the user that also governs how many alignments per read are expected to be returned.
UPDATE: 13/03/2012
-> added a parameter to adjust the number of alignments to be returned (does not much at the moment, only 1 alignment is still returned)
UPDATE: 13/03/2012
-> fixed a bug in dp.cpp, where the tracebackposition was not recovered properly for local alignments or alignments with free queryEnd and free refEnd.
UPDATE: 14/03/2012
-> fixed a bug in calculation mapq (+ sign was should have been -). Included asserts about mapq
UPDATE: 14/03/2012
-> added some more assert in the code
UPDATE: 14/03/2012
-> corrected bug in calculation X0-tag: new cigarstring stopped recording after first match/mismatch sequence in a sequence of matches and mismatches
UPDATE: 14/03/2012
-> -c noClipping gives better results, perhaps make default!
UPDATE: 15/03/2012
-> change: final dp boundaries now uses editDist-currentEditDist for reference sequence boundary.

v0.2 - Allow multiple matches to be calculated 19/03/2012
----------------------------------------------
Added a new parameter which allows ALFALFA to calculate more than 1 alignment per read and per strand.
Added some heuristics to speed up search and added algorithm to select multiple candidate regions.
-----------------------------------------------

v0.3
first release
-------------

v0.3.1
*Optimized DP a bit when no affine gap penalties are used.
*fixed the usage and error prints to reflect default parameter changes and parameter name changes
*added long options to the command line and update usage message

v0.3.2
*multithreading support added and working
*minor programming improvements in the code
Planned features: 
-leave out suffix links and ISA table for large values of "s", because suffix links do not provide significant additional speedup
-optimize dynamic programming code and add filters to lower the calls to the dynamic programming routine and/or decrease the size of the matrix

v0.3.3
*added child table construction
*added child table traversal
*configured sparse 'enhanced' suffix array to use child table for s >= 4 and leave out ISA. For s<4, the child table will not be constructed

v0.3.4
*added banded alignment; which supports everything, except local alignment
*added band-value in inexact matching algorithm
*added score-matrix for DP, eliminating some branches

v0.3.5
*changed dynamic programming: only initialise when necessairy, instead of for every run of the routine.
*changed dynamic programming: calculate trace after filling the DP matrix, instead of working with a trace matrix

v0.5.0
*reordered code and separated classes to enable easier extension of the code
*changed behaviour for parameter 'k'. Now 'k' means the maximum amount of alignments to be searched for read (both strands included)
*fixed bug for k=1, where 0 alignments were searched
*added new unpaired reads mapping function that first calculates candidate region for both orientations of the read before extension
*changed command line parameters to be more like bowtie2

*paired-end read support!!!
*added api for paired-end reads
*added 4 different algorithms to map paired end reads

*fixed multithreading issue with semi-static DP matrix, now every thread has its own DP matrix.
*fixed bug in traceback of DP algorithm
*added banded DP mode with non-symmetrical band (used in paired-end algorithm)

v0.5.2
*many bugfixes in paired end mode
*fixed possible bugs when indexing sequences larger than 2GB
*decreased memory of DP matrix by splitting dimension of matrix in width and length

v0.5.3
*fixed bug where ISA index was not freed when using the child table index

v0.5.4
*added 'check' command to give some statistics on alignment SAM files. Currently the mode is untested and works with sorted SAM files only (SAM files can be sorted with SAMtools)

v0.6
*added persistent index using the 'index' command. The index can now be saved to disk and loaded into memory.
*changed #threads parameter from -p to -q because -p is now taken by the index command
*added 'check' to the main class (check was never executed)